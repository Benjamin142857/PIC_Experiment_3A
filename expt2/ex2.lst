

HI-TECH Software PICC Macro Assembler V8.05PL2
Serial number: HCPIC-88888                            Sat Sep 28 15:00:02 2019

Licensed to: ONE TWO
     1                           	processor	16F877A
     2                           	opt	pw 79
     3                           	psect	__Z88888RS_,global,delta=1
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	const1,local,class=CONST,delta=2
     6                           	psect	text2,local,class=CODE,delta=2
     7                           	psect	text4,local,class=CODE,delta=2
     8                           	psect	temp,global,ovrld,class=BANK0,space=1,de
      +                          lta=1
     9  0000                     
    10  0000                     
    11  0000                     
    12  0000                     
    13  0000                     
    14  0000                     
    15  0000                     
    16  0000                     
    17  0000                     
    18  0000                     
    19                           
    20                           	psect	__Z88888RS_
    21  0190                     
    22  0190                     
    23                           
    24                           	psect	const1
    25  0008  0782               	addwf	2
    26  0009                     _LED
    27  0009  343F               	retlw	63
    28  000A  3406               	retlw	6
    29  000B  345B               	retlw	91
    30  000C  344F               	retlw	79
    31  000D  3466               	retlw	102
    32  000E  346D               	retlw	109
    33  000F  347D               	retlw	125
    34  0010  3407               	retlw	7
    35  0011  347F               	retlw	127
    36  0012  346F               	retlw	111
    37                           
    38                           	psect	text2
    39  073E                     _delaytime
    40                           ;	_j assigned to ?a_delaytime+0
    41  0000                     _delaytime$j	set	?a_delaytime
    42                           ;	_i assigned to ?a_delaytime+2
    43  0000                     _delaytime$i	set	?a_delaytime+2
    44                           ;ex2.c: 76: int j,i;
    45  073E  0183               	clrf	3	;select bank 0
    46  073F  0823               	movf	?_delaytime,w
    47  0740  00A7               	movwf	?a_delaytime+2
    48  0741  0824               	movf	?_delaytime+1,w
    49  0742  00A8               	movwf	?a_delaytime+3
    50  0743  3A80               	xorlw	128
    51  0744  00F0               	movwf	btemp
    52  0745  3080               	movlw	128
    53  0746  0270               	subwf	btemp,w
    54  0747  3001               	movlw	1
    55                           ;set	bank bits (((?a_delaytime+2)))
    56  0748  1903               	btfsc	3,2
    57  0749  0227               	subwf	?a_delaytime+2,w
    58  074A  1C03               	btfss	3,0
    59  074B  0008               	return
    60  074C                     l28
    61                           ;ex2.c: 78: {
    62                           ;ex2.c: 79: for(j=0; j<100; j++);
    63  074C  01A5               	clrf	?a_delaytime
    64  074D  01A6               	clrf	?a_delaytime+1
    65  074E                     l31
    66  074E  0AA5               	incf	?a_delaytime
    67  074F  1903               	btfsc	3,2
    68  0750  0AA6               	incf	?a_delaytime+1
    69  0751  0826               	movf	?a_delaytime+1,w
    70  0752  3A80               	xorlw	128
    71  0753  00F0               	movwf	btemp
    72  0754  3080               	movlw	128
    73  0755  0270               	subwf	btemp,w
    74  0756  3064               	movlw	100
    75                           ;set	bank bits for (((?a_delaytime+0)))
    76  0757  1903               	btfsc	3,2
    77  0758  0225               	subwf	?a_delaytime,w
    78  0759  1C03               	btfss	3,0
    79  075A  2F4E               	goto	l31
    80                           ;ex2.c: 80: }
    81  075B  08A7               	movf	?a_delaytime+2
    82  075C  1903               	btfsc	3,2
    83  075D  03A8               	decf	?a_delaytime+3
    84  075E  03A7               	decf	?a_delaytime+2
    85  075F  0828               	movf	?a_delaytime+3,w
    86  0760  3A80               	xorlw	128
    87  0761  00F0               	movwf	btemp
    88  0762  3080               	movlw	128
    89  0763  0270               	subwf	btemp,w
    90  0764  3001               	movlw	1
    91                           ;set	bank bits (((?a_delaytime+2)))
    92  0765  1903               	btfsc	3,2
    93  0766  0227               	subwf	?a_delaytime+2,w
    94  0767  1C03               	btfss	3,0
    95  0768  0008               	return
    96  0769  2F4C               	goto	l28
    97  076A                     _shownumber
    98                           ;ex2.c: 85: if(n<10)
    99  076A  0183               	clrf	3	;select bank 0
   100  076B  0822               	movf	?_shownumber+1,w
   101  076C  3A80               	xorlw	128
   102  076D  00F0               	movwf	btemp
   103  076E  3080               	movlw	128
   104  076F  0270               	subwf	btemp,w
   105  0770  300A               	movlw	10
   106                           ;set	bank bits (((?_shownumber+0)))
   107  0771  1903               	btfsc	3,2
   108  0772  0221               	subwf	?_shownumber,w
   109  0773  1803               	btfsc	3,0
   110  0774  2F7E               	goto	l35
   111                           ;ex2.c: 86: {
   112  0775  1485               	bsf	5,1
   113                           ;ex2.c: 88: PORTD=LED[n];
   114  0776  3000               	movlw	_LED shr (0+8)
   115  0777  008A               	movwf	10
   116  0778  0821               	movf	?_shownumber,w
   117  0779  2008               	call	((_LED+-1)& (0+2047))| (($)& (0+-2048))
   118  077A  120A  118A         	pagesel	$
   119  077C  0088               	movwf	8	;volatile
   120                           ;ex2.c: 89: }
   121  077D  0008               	return
   122  077E                     l35
   123  077E  0822               	movf	?_shownumber+1,w
   124  077F  3A80               	xorlw	128
   125  0780  00F0               	movwf	btemp
   126  0781  3080               	movlw	128
   127  0782  0270               	subwf	btemp,w
   128  0783  300A               	movlw	10
   129                           ;set	bank bits for (((?_shownumber+0)))
   130  0784  1903               	btfsc	3,2
   131  0785  0221               	subwf	?_shownumber,w
   132  0786  1C03               	btfss	3,0
   133  0787  0008               	return
   134  0788  0822               	movf	?_shownumber+1,w
   135  0789  3A80               	xorlw	128
   136  078A  00F0               	movwf	btemp
   137  078B  3080               	movlw	128
   138  078C  0270               	subwf	btemp,w
   139  078D  3014               	movlw	20
   140                           ;set	bank bits (((?_shownumber+0)))
   141  078E  1903               	btfsc	3,2
   142  078F  0221               	subwf	?_shownumber,w
   143  0790  1803               	btfsc	3,0
   144  0791  0008               	return
   145                           ;ex2.c: 91: {
   146  0792  1505               	bsf	5,2
   147                           ;ex2.c: 93: PORTD=LED[1];
   148  0793  3000               	movlw	_LED shr (0+8)
   149  0794  008A               	movwf	10
   150  0795  3001               	movlw	1
   151  0796  2008               	call	((_LED+-1)& (0+2047))| (($)& (0+-2048))
   152  0797  0088               	movwf	8	;volatile
   153                           ;ex2.c: 94: delaytime(100);
   154  0798  3064               	movlw	100
   155  0799  00A3               	movwf	?_delaytime
   156  079A  01A4               	clrf	?_delaytime+1
   157  079B  120A  118A  273E   	fcall	_delaytime
   158                           ;ex2.c: 95: RA1=1;
   159  079E  1485               	bsf	5,1
   160                           ;ex2.c: 96: PORTD=LED[n-10];
   161  079F  3000               	movlw	_LED shr (0+8)
   162  07A0  008A               	movwf	10
   163  07A1  0821               	movf	?_shownumber,w
   164  07A2  3EF6               	addlw	-10
   165  07A3  2008               	call	((_LED+-1)& (0+2047))| (($)& (0+-2048))
   166  07A4  0088               	movwf	8	;volatile
   167                           ;ex2.c: 97: delaytime(100);
   168  07A5  3064               	movlw	100
   169  07A6  00A3               	movwf	?_delaytime
   170  07A7  01A4               	clrf	?_delaytime+1
   171  07A8  120A  118A  2F3E   	ljmp	_delaytime
   172                           ;ex2.c: 37: unsigned char GetKeyValue(void)
   173                           ;ex2.c: 38: {
   174  07AB                     _GetKeyValue
   175                           ;ex2.c: 39: RA1=1;
   176  07AB  0183               	clrf	3	;select bank 0
   177  07AC  1485               	bsf	5,1
   178                           ;ex2.c: 40: if((PORTB&0B00110101)!= 0B00110101)
   179  07AD  0806               	movf	6,w	;volatile
   180  07AE  3935               	andlw	53
   181  07AF  3A35               	xorlw	53
   182  07B0  1903               	btfsc	3,2
   183  07B1  2FBA               	goto	l7
   184                           ;ex2.c: 41: {
   185  07B2  1C06               	btfss	6,0
   186  07B3  3401               	retlw	1
   187                           ;ex2.c: 43: if(RB2==0)return 2;
   188  07B4  1D06               	btfss	6,2
   189  07B5  3402               	retlw	2
   190                           ;ex2.c: 44: if(RB4==0)return 3;
   191  07B6  1E06               	btfss	6,4
   192  07B7  3403               	retlw	3
   193                           ;ex2.c: 45: if(RB5==0)return 4;
   194  07B8  1E86               	btfss	6,5
   195  07B9  3404               	retlw	4
   196  07BA                     l7
   197                           ;ex2.c: 47: RA2=1;
   198  07BA  1505               	bsf	5,2
   199                           ;ex2.c: 48: if((PORTB& 0B00110101)!= 0B00110101
      +                          )
   200  07BB  0806               	movf	6,w	;volatile
   201  07BC  3935               	andlw	53
   202  07BD  3A35               	xorlw	53
   203  07BE  1903               	btfsc	3,2
   204  07BF  2FC8               	goto	l12
   205                           ;ex2.c: 49: {
   206  07C0  1C06               	btfss	6,0
   207  07C1  3405               	retlw	5
   208                           ;ex2.c: 51: if(RB2==0)return 6;
   209  07C2  1D06               	btfss	6,2
   210  07C3  3406               	retlw	6
   211                           ;ex2.c: 52: if(RB4==0)return 7;
   212  07C4  1E06               	btfss	6,4
   213  07C5  3407               	retlw	7
   214                           ;ex2.c: 53: if(RB5==0)return 8;
   215  07C6  1E86               	btfss	6,5
   216  07C7  3408               	retlw	8
   217  07C8                     l12
   218                           ;ex2.c: 55: RA3=1;
   219  07C8  1585               	bsf	5,3
   220                           ;ex2.c: 56: if((PORTB& 0B00110101)!= 0B00110101
      +                          )
   221  07C9  0806               	movf	6,w	;volatile
   222  07CA  3935               	andlw	53
   223  07CB  3A35               	xorlw	53
   224  07CC  1903               	btfsc	3,2
   225  07CD  2FD6               	goto	l17
   226                           ;ex2.c: 57: {
   227  07CE  1C06               	btfss	6,0
   228  07CF  3409               	retlw	9
   229                           ;ex2.c: 59: if(RB2==0)return 10;
   230  07D0  1D06               	btfss	6,2
   231  07D1  340A               	retlw	10
   232                           ;ex2.c: 60: if(RB4==0)return 11;
   233  07D2  1E06               	btfss	6,4
   234  07D3  340B               	retlw	11
   235                           ;ex2.c: 61: if(RB5==0)return 12;
   236  07D4  1E86               	btfss	6,5
   237  07D5  340C               	retlw	12
   238  07D6                     l17
   239                           ;ex2.c: 63: RA5=1;
   240  07D6  1685               	bsf	5,5
   241                           ;ex2.c: 64: if((PORTB& 0B00110101)!= 0B00110101
      +                          )
   242  07D7  0806               	movf	6,w	;volatile
   243  07D8  3935               	andlw	53
   244  07D9  3A35               	xorlw	53
   245  07DA  1903               	btfsc	3,2
   246  07DB  3400               	retlw	0
   247                           ;ex2.c: 65: {
   248  07DC  1C06               	btfss	6,0
   249  07DD  340D               	retlw	13
   250                           ;ex2.c: 67: if(RB2==0)return 14;
   251  07DE  1D06               	btfss	6,2
   252  07DF  340E               	retlw	14
   253                           ;ex2.c: 68: if(RB4==0)return 15;
   254  07E0  1E06               	btfss	6,4
   255  07E1  340F               	retlw	15
   256                           ;ex2.c: 69: if(RB5==0)return 16;
   257  07E2  1E86               	btfss	6,5
   258  07E3  3410               	retlw	16
   259                           ;ex2.c: 71: return 0;
   260  07E4  3400               	retlw	0
   261  07E5                     _main
   262                           ;	_key assigned to ?a_main+0
   263  0000                     _main$key	set	?a_main
   264                           ;ex2.c: 21: unsigned char key=0;
   265  07E5  1283               	bcf	3,5
   266  07E6  1303               	bcf	3,6	;carry unused
   267  07E7  01A0               	clrf	?a_main
   268                           ;ex2.c: 22: TRISD=0X00;
   269  07E8  1683               	bsf	3,5
   270  07E9  0188               	clrf	8	;volatile
   271                           ;ex2.c: 23: TRISA=0X00;
   272  07EA  0185               	clrf	5	;volatile
   273                           ;ex2.c: 24: TRISB=0XFF;
   274  07EB  30FF               	movlw	-1
   275  07EC  0086               	movwf	6	;volatile
   276                           ;ex2.c: 25: PORTD=0X00;
   277  07ED  1283               	bcf	3,5
   278  07EE                     L1
   279  07EE  0188               	clrf	8	;volatile
   280                           ;ex2.c: 27: while(1)
   281                           ;ex2.c: 28: {
   282  07EF  27AB               	fcall	_GetKeyValue
   283  07F0  00A0               	movwf	?a_main
   284                           ;ex2.c: 30: if(key!=0)shownumber((int)key);
   285  07F1  08A0               	movf	?a_main
   286  07F2  1903               	btfsc	3,2
   287  07F3  2FFA               	goto	l5
   288  07F4  0820               	movf	?a_main,w
   289  07F5  00A1               	movwf	?_shownumber
   290  07F6  01A2               	clrf	?_shownumber+1
   291  07F7  276A  120A  118A   	fcall	_shownumber
   292  07FA                     l5
   293                           ;ex2.c: 31: key=0;
   294  07FA  01A0               	clrf	?a_main
   295                           ;ex2.c: 32: delaytime(1);
   296  07FB  01A3               	clrf	?_delaytime
   297  07FC  0AA3               	incf	?_delaytime
   298  07FD  01A4               	clrf	?_delaytime+1
   299  07FE  273E               	fcall	_delaytime
   300  07FF  2FEE               	goto	L1
   301                           
   302                           	psect	text4
   303  0000                     
   304  0000                     
   305  0000                     
   306  0000                     
   307  0000                     
   308  0000                     
   309  0000                     
   310  0000                     
   311  0000                     
   312  0000                     
   313  0000                     
   314  0000                     
   315  0000                     
   316  0000                     
   317  0000                     
   318  0000                     
   319  0000                     
   320  0000                     
   321  0000                     
   322  0000                     
   323  0000                     
   324  0000                     
   325  0000                     
   326  0000                     
   327  0000                     
   328  0000                     
   329  0000                     
   330  0000                     
   331  0000                     
   332  0000                     
   333  0000                     
   334  0000                     
   335  0000                     
   336  0000                     
   337  0000                     
   338  0000                     
   339  0000                     
   340  0000                     
   341  0000                     
   342  0000                     
   343  0000                     
   344  0000                     
   345  0000                     
   346  0000                     
   347  0000                     
   348  0000                     
   349  0000                     
   350  0000                     
   351  0000                     
   352  0000                     
   353  0000                     
   354  0000                     
   355  0000                     
   356  0000                     
   357  0000                     
   358  0000                     
   359  0000                     
   360  0000                     
   361  0000                     
   362  0000                     
   363  0000                     
   364  0000                     
   365  0000                     
   366  0000                     
   367  0000                     
   368  0000                     
   369  0000                     
   370  0000                     
   371  0000                     
   372  0000                     
   373  0000                     
   374  0000                     
   375  0000                     
   376  0000                     
   377  0000                     
   378  0000                     
   379  0000                     
   380  0000                     
   381  0000                     
   382  0000                     
   383  0000                     
   384  0000                     
   385  0000                     
   386  0000                     
   387  0000                     
   388  0000                     
   389  0000                     
   390  0000                     
   391  0000                     
   392  0000                     
   393  0000                     
   394  0000                     
   395  0000                     
   396  0000                     
   397  0000                     
   398  0000                     
   399  0000                     
   400  0000                     
   401  0000                     
   402  0000                     
   403  0000                     
   404  0000                     
   405  0000                     
   406  0000                     
   407  0000                     
   408  0000                     
   409  0000                     
   410  0000                     
   411  0000                     
   412  0000                     
   413  0000                     
   414  0000                     
   415  0000                     
   416  0000                     
   417  0000                     
   418  0000                     
   419  0000                     
   420  0000                     
   421  0000                     
   422  0000                     
   423  0000                     
   424  0000                     
   425  0000                     
   426  0000                     
   427  0000                     
   428  0000                     
   429  0000                     
   430  0000                     
   431  0000                     
   432  0000                     
   433  0000                     
   434  0000                     
   435  0000                     
   436  0000                     
   437  0000                     
   438  0000                     
   439  0000                     
   440  0000                     
   441  0000                     
   442  0000                     
   443  0000                     
   444  0000                     
   445  0000                     
   446  0000                     
   447  0000                     
   448  0000                     
   449  0000                     
   450  0000                     
   451  0000                     
   452  0000                     
   453  0000                     
   454  0000                     
   455  0000                     
   456  0000                     
   457  0000                     
   458  0000                     
   459  0000                     
   460  0000                     
   461  0000                     
   462  0000                     
   463  0000                     
   464  0000                     
   465  0000                     
   466  0000                     
   467  0000                     
   468  0000                     
   469  0000                     
   470  0000                     
   471  0000                     
   472  0000                     
   473  0000                     
   474  0000                     
   475  0000                     
   476  0000                     
   477  0000                     
   478  0000                     
   479  0000                     
   480  0000                     
   481  0000                     
   482  0000                     
   483  0000                     
   484  0000                     
   485  0000                     
   486  0000                     
   487  0000                     
   488  0000                     
   489  0000                     
   490  0000                     
   491  0000                     
   492  0000                     
   493  0000                     
   494  0000                     
   495  0000                     
   496  0000                     
   497  0000                     
   498  0000                     
   499  0000                     
   500  0000                     
   501  0000                     
   502  0000                     
   503  0000                     
   504  0000                     
   505  0000                     
   506  0000                     
   507  0000                     
   508  0000                     
   509  0000                     
   510  0000                     
   511  0000                     
   512  0000                     
   513  0000                     
   514  0000                     
   515  0000                     
   516  0000                     
   517  0000                     
   518  0000                     
   519  0000                     
   520  0000                     
   521  0000                     
   522  0000                     
   523  0000                     
   524  0000                     
   525  0000                     
   526  0000                     
   527  0000                     
   528  0000                     
   529  0000                     
   530  0000                     
   531  0000                     
   532  0000                     
   533  0000                     
   534  0000                     
   535  0000                     
   536  0000                     
   537  0000                     
   538  0000                     
   539  0000                     
   540  0000                     
   541  0000                     
   542  0000                     
   543  0000                     
   544  0000                     
   545  0000                     
   546  0000                     
   547  0000                     
   548  0000                     
   549  0000                     
   550  0000                     
   551  0000                     
   552  0000                     
   553  0000                     
   554  0000                     
   555  0000                     
   556  0000                     
   557  0000                     
   558  0000                     
   559  0000                     
   560  0000                     
   561  0000                     
   562  0000                     
   563  0000                     
   564  0000                     
   565  0000                     
   566  0000                     
   567  0000                     
   568  0000                     
   569  0000                     
   570  0000                     
   571  0000                     
   572  0000                     
   573  0000                     
   574  0000                     
   575  0000                     
   576  0000                     
   577  0000                     
   578  0000                     
   579                           
   580                           	psect	temp
   581  0070                     btemp
   582  0070                     	ds	1


HI-TECH Software PICC Macro Assembler V8.05PL2
Symbol Table                                          Sat Sep 28 15:00:02 2019

      ?a_main 0020             l5 07FA             l7 07BA  
           pc 0002   ?_shownumber 0021            l12 07C8  
          l31 074E            l17 07D6            l35 077E  
          l28 074C     _delaytime 073E   _GetKeyValue 07AB  
         _LED 0009    _shownumber 076A          _main 07E5  
        btemp 0070          start 0004    ?_delaytime 0023  
       pclath 000A         status 0003   ?a_delaytime 0025  
  used_btemp0 0001  
