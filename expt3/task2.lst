

HI-TECH Software PICC Macro Assembler V8.05PL2
Serial number: HCPIC-88888                            Thu Oct 17 23:48:05 2019

Licensed to: ONE TWO
     1                           	processor	16F877A
     2                           	opt	pw 79
     3                           	psect	__Z88888RS_,global,delta=1
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	const1,local,class=CONST,delta=2
     6                           	psect	text1,local,class=CODE,delta=2
     7                           	psect	intcode,global,class=CODE,delta=2
     8                           	psect	intsave_0,global,ovrld,class=COMBANK,spa
      +                          ce=1,delta=1
     9                           	psect	intret,global,class=CODE,delta=2
    10                           	psect	intentry,global,class=CODE,delta=2
    11                           	psect	intsave,global,class=BANK0,space=1,delta
      +                          =1
    12                           	psect	text2,local,class=CODE,delta=2
    13                           	psect	text3,local,class=CODE,delta=2
    14                           	psect	text4,local,class=CODE,delta=2
    15                           	psect	temp,global,ovrld,class=BANK0,space=1,de
      +                          lta=1
    16  0000                     
    17  0000                     
    18  0000                     
    19  0000                     
    20  0000                     
    21  0000                     
    22  0000                     
    23  0000                     
    24  0000                     
    25  0000                     
    26                           
    27                           	psect	__Z88888RS_
    28  0190                     
    29  0190                     
    30                           
    31                           	psect	const1
    32  005F  0782               	addwf	2
    33  0060                     _LED
    34  0060  343F               	retlw	63
    35  0061  3406               	retlw	6
    36  0062  345B               	retlw	91
    37  0063  344F               	retlw	79
    38  0064  3466               	retlw	102
    39  0065  346D               	retlw	109
    40  0066  347D               	retlw	125
    41  0067  3407               	retlw	7
    42  0068  347F               	retlw	127
    43  0069  346F               	retlw	111
    44                           
    45                           	psect	intcode
    46                           ;task2.c: 45: void interrupt PIC_Int(void) {
    47  0011                     _PIC_Int
    48  0011                     int_func
    49                           ;	_i assigned to ?a_PIC_Int+0
    50  0000                     _PIC_Int$i	set	?a_PIC_Int
    51                           ;task2.c: 46: unsigned int i;
    52  0011  1C0B               	btfss	11,0
    53  0012  284C               	goto	L1
    54                           ;task2.c: 51: PORTD=0x00;
    55  0013  1283               	bcf	3,5
    56  0014  1303               	bcf	3,6	;carry unused
    57  0015  0188               	clrf	8	;volatile
    58                           ;task2.c: 53: for(i=0; i<10; i++)
    59  0016  01A6               	clrf	?a_PIC_Int
    60  0017  01A7               	clrf	?a_PIC_Int+1
    61  0018                     l10
    62                           ;task2.c: 54: {
    63                           ;task2.c: 55: PORTD=~PORTD;
    64  0018  0988               	comf	8	;volatile
    65                           ;task2.c: 56: Delay1(150);
    66  0019  3096               	movlw	150
    67  001A  00A8               	movwf	?_Delay1
    68  001B  01A9               	clrf	?_Delay1+1
    69  001C  120A  118A  279A   	fcall	_Delay1
      +       120A  118A         
    70                           ;task2.c: 57: }
    71  0021  0AA6               	incf	?a_PIC_Int
    72  0022  1903               	btfsc	3,2
    73  0023  0AA7               	incf	?a_PIC_Int+1
    74  0024  3000               	movlw	0
    75  0025  0227               	subwf	?a_PIC_Int+1,w
    76  0026  300A               	movlw	10
    77  0027  1903               	btfsc	3,2
    78  0028  0226               	subwf	?a_PIC_Int,w
    79  0029  1C03               	btfss	3,0
    80  002A  2818               	goto	l10
    81                           ;task2.c: 59: RA1 = 0;
    82  002B  1085               	bcf	5,1
    83                           ;task2.c: 60: RA5 = 1;
    84  002C  1685               	bsf	5,5
    85                           ;task2.c: 62: for(i=0; i<6; i++) {
    86  002D  01A6               	clrf	?a_PIC_Int
    87  002E  01A7               	clrf	?a_PIC_Int+1
    88  002F                     l13
    89                           ;task2.c: 63: PORTD = LED[5-i];
    90  002F  3000               	movlw	_LED shr (0+8)
    91  0030  008A               	movwf	10
    92  0031  0826               	movf	?a_PIC_Int,w
    93  0032  3C05               	sublw	5
    94  0033  205F               	call	((_LED+-1)& (0+2047))| (($)& (0+-2048))
    95  0034  0088               	movwf	8	;volatile
    96                           ;task2.c: 64: Delay1(300);
    97  0035  302C               	movlw	44
    98  0036  00A8               	movwf	?_Delay1
    99  0037  3001               	movlw	1
   100  0038  00A9               	movwf	?_Delay1+1
   101  0039  120A  118A  279A   	fcall	_Delay1
      +       120A  118A         
   102                           ;task2.c: 65: }
   103  003E  0AA6               	incf	?a_PIC_Int
   104  003F  1903               	btfsc	3,2
   105  0040  0AA7               	incf	?a_PIC_Int+1
   106  0041  3000               	movlw	0
   107  0042  0227               	subwf	?a_PIC_Int+1,w
   108  0043  3006               	movlw	6
   109  0044  1903               	btfsc	3,2
   110  0045  0226               	subwf	?a_PIC_Int,w
   111  0046  1C03               	btfss	3,0
   112  0047  282F               	goto	l13
   113                           ;task2.c: 66: PORTD=0x00;
   114  0048  0188               	clrf	8	;volatile
   115                           ;task2.c: 67: RA1 = 1;
   116  0049  1485               	bsf	5,1
   117                           ;task2.c: 68: RA5 = 0;
   118  004A  1285               	bcf	5,5
   119                           ;task2.c: 71: }
   120  004B  100B               	bcf	11,0
   121  004C                     L1
   122                           ;task2.c: 73: }
   123  004C  1303               	bcf	3,6	;carry unused
   124  004D  1283               	bcf	3,5
   125                           
   126                           	psect	intsave_0
   127  0072                     saved_w
   128  0072                     	ds	1
   129                           
   130                           	psect	intret
   131  0052  082D               	movf	saved_fsr,w
   132  0053  0084               	movwf	4	;restore FSR
   133  0054  082E               	movf	saved_pclath,w
   134  0055  008A               	movwf	10
   135  0056                     int_restore
   136  0056  082C               	movf	saved_status,w
   137  0057  0083               	movwf	3
   138  0058  0EF2               	swapf	saved_w
   139  0059  0E72               	swapf	saved_w,w
   140  005A  0009               	retfie
   141                           
   142                           	psect	intentry
   143  0004                     int_entry
   144  0004  00F2               	movwf	saved_w
   145  0005  0803               	movf	3,w
   146  0006  0183               	clrf	3
   147  0007  00AC               	movwf	saved_status
   148  0008  0804               	movf	4,w
   149  0009  00AD               	movwf	saved_fsr
   150  000A  080A               	movf	10,w
   151  000B  00AE               	movwf	saved_pclath
   152  000C  018A               	clrf	10
   153                           ;task2.c: 76: void Delay (unsigned int delay)
   154                           ;task2.c: 77: {
   155                           ;       param _delay assigned to ?_Delay+0
   156  0000                     _Delay$delay	set	?_Delay
   157                           
   158                           	psect	intsave
   159  002C                     saved_status
   160  002C                     	ds	1
   161  002D                     saved_fsr
   162  002D                     	ds	1
   163  002E                     saved_pclath
   164  002E                     	ds	1
   165                           
   166                           	psect	text2
   167  07B4                     _Delay
   168                           ;	_i assigned to ?a_Delay+0
   169  0000                     _Delay$i	set	?a_Delay
   170                           ;task2.c: 78: unsigned int i;
   171  07B4  0183               	clrf	3	;select bank 0
   172  07B5  0823               	movf	?_Delay+1,w
   173  07B6  0422               	iorwf	?_Delay,w
   174  07B7  1903               	btfsc	3,2
   175  07B8  0008               	return
   176  07B9                     l17
   177                           ;task2.c: 80: for (i=0; i<45; i++);
   178  07B9  01A4               	clrf	?a_Delay
   179  07BA  01A5               	clrf	?a_Delay+1
   180  07BB                     l20
   181  07BB  0AA4               	incf	?a_Delay
   182  07BC  1903               	btfsc	3,2
   183  07BD  0AA5               	incf	?a_Delay+1
   184  07BE  3000               	movlw	0
   185  07BF  0225               	subwf	?a_Delay+1,w
   186  07C0  302D               	movlw	45
   187  07C1  1903               	btfsc	3,2
   188  07C2  0224               	subwf	?a_Delay,w
   189  07C3  1C03               	btfss	3,0
   190  07C4  2FBB               	goto	l20
   191  07C5  08A2               	movf	?_Delay
   192  07C6  1903               	btfsc	3,2
   193  07C7  03A3               	decf	?_Delay+1
   194  07C8  03A2               	decf	?_Delay
   195  07C9  0823               	movf	?_Delay+1,w
   196  07CA  0422               	iorwf	?_Delay,w
   197  07CB  1903               	btfsc	3,2
   198  07CC  0008               	return
   199  07CD  2FB9               	goto	l17
   200  07CE                     _main
   201                           ;	_i assigned to ?a_main+0
   202  0000                     _main$i	set	?a_main
   203                           ;task2.c: 21: ADCON1 = (ADCON1&0b11110000)|0b00
      +                          000111;
   204  07CE  1683               	bsf	3,5
   205  07CF  1303               	bcf	3,6	;carry unused
   206  07D0  081F               	movf	31,w	;volatile
   207  07D1  39F0               	andlw	-16
   208  07D2  3807               	iorlw	7
   209  07D3  009F               	movwf	31	;volatile
   210                           ;task2.c: 22: TRISB = (TRISB&0b11001110)|0b0011
      +                          0001;
   211  07D4  0806               	movf	6,w	;volatile
   212  07D5  39CE               	andlw	-50
   213  07D6  3831               	iorlw	49
   214  07D7  0086               	movwf	6	;volatile
   215                           ;task2.c: 23: TRISD = 0x00;
   216  07D8  0188               	clrf	8	;volatile
   217                           ;task2.c: 24: TRISA = TRISA&0b11011101;
   218  07D9  30DD               	movlw	-35
   219  07DA  0585               	andwf	5	;volatile
   220                           ;task2.c: 27: INTEDG = 1;
   221  07DB  1701               	bsf	1,6
   222                           ;task2.c: 28: RBIE = 1;
   223  07DC  158B               	bsf	11,3
   224                           ;task2.c: 29: RBIF = 0;
   225  07DD  100B               	bcf	11,0
   226                           ;task2.c: 30: GIE = 1;
   227  07DE  178B               	bsf	11,7
   228                           ;task2.c: 31: RA1 = 1;
   229  07DF  1283               	bcf	3,5
   230  07E0  1485               	bsf	5,1
   231                           ;task2.c: 32: RA5 = 0;
   232  07E1  1285               	bcf	5,5
   233  07E2                     l3
   234                           ;task2.c: 34: while(1){
   235                           ;task2.c: 35: unsigned int i;
   236  07E2  01A0               	clrf	?a_main
   237  07E3  01A1               	clrf	?a_main+1
   238  07E4                     l5
   239                           ;task2.c: 37: {
   240                           ;task2.c: 38: PORTD=(0x01<<i);
   241  07E4  3001               	movlw	1
   242  07E5  00F0               	movwf	btemp
   243  07E6  0820               	movf	?a_main,w
   244  07E7  00F1               	movwf	btemp+1
   245  07E8  0AF1               	incf	btemp+1
   246  07E9  2FEC               	goto	u14
   247  07EA                     u15
   248  07EA  1003               	bcf	3,0
   249  07EB  0DF0               	rlf	btemp
   250  07EC                     u14
   251  07EC  0BF1               	decfsz	btemp+1
   252  07ED  2FEA               	goto	u15
   253  07EE  0870               	movf	btemp,w
   254  07EF  0088               	movwf	8	;volatile
   255                           ;task2.c: 39: Delay(1000);
   256  07F0  30E8               	movlw	232
   257  07F1  00A2               	movwf	?_Delay
   258  07F2  3003               	movlw	3
   259  07F3  00A3               	movwf	?_Delay+1
   260  07F4  27B4               	fcall	_Delay
   261                           ;task2.c: 40: }
   262  07F5  0AA0               	incf	?a_main
   263  07F6  1903               	btfsc	3,2
   264  07F7  0AA1               	incf	?a_main+1
   265  07F8  3000               	movlw	0
   266  07F9  0221               	subwf	?a_main+1,w
   267  07FA  3008               	movlw	8
   268  07FB  1903               	btfsc	3,2
   269  07FC  0220               	subwf	?a_main,w
   270  07FD  1803               	btfsc	3,0
   271  07FE  2FE2               	goto	l3
   272  07FF  2FE4               	goto	l5
   273                           
   274                           	psect	text3
   275  079A                     _Delay1
   276                           ;	_i assigned to ?a_Delay1+0
   277  0000                     _Delay1$i	set	?a_Delay1
   278                           ;task2.c: 85: unsigned int i;
   279  079A  0183               	clrf	3	;select bank 0
   280  079B  0829               	movf	?_Delay1+1,w
   281  079C  0428               	iorwf	?_Delay1,w
   282  079D  1903               	btfsc	3,2
   283  079E  0008               	return
   284  079F                     l24
   285                           ;task2.c: 87: for (i=0; i<45; i++);
   286  079F  01AA               	clrf	?a_Delay1
   287  07A0  01AB               	clrf	?a_Delay1+1
   288  07A1                     l27
   289  07A1  0AAA               	incf	?a_Delay1
   290  07A2  1903               	btfsc	3,2
   291  07A3  0AAB               	incf	?a_Delay1+1
   292  07A4  3000               	movlw	0
   293  07A5  022B               	subwf	?a_Delay1+1,w
   294  07A6  302D               	movlw	45
   295  07A7  1903               	btfsc	3,2
   296  07A8  022A               	subwf	?a_Delay1,w
   297  07A9  1C03               	btfss	3,0
   298  07AA  2FA1               	goto	l27
   299  07AB  08A8               	movf	?_Delay1
   300  07AC  1903               	btfsc	3,2
   301  07AD  03A9               	decf	?_Delay1+1
   302  07AE  03A8               	decf	?_Delay1
   303  07AF  0829               	movf	?_Delay1+1,w
   304  07B0  0428               	iorwf	?_Delay1,w
   305  07B1  1903               	btfsc	3,2
   306  07B2  0008               	return
   307  07B3  2F9F               	goto	l24
   308                           
   309                           	psect	text4
   310  0000                     
   311  0000                     
   312  0000                     
   313  0000                     
   314  0000                     
   315  0000                     
   316  0000                     
   317  0000                     
   318  0000                     
   319  0000                     
   320  0000                     
   321  0000                     
   322  0000                     
   323  0000                     
   324  0000                     
   325  0000                     
   326  0000                     
   327  0000                     
   328  0000                     
   329  0000                     
   330  0000                     
   331  0000                     
   332  0000                     
   333  0000                     
   334  0000                     
   335  0000                     
   336  0000                     
   337  0000                     
   338  0000                     
   339  0000                     
   340  0000                     
   341  0000                     
   342  0000                     
   343  0000                     
   344  0000                     
   345  0000                     
   346  0000                     
   347  0000                     
   348  0000                     
   349  0000                     
   350  0000                     
   351  0000                     
   352  0000                     
   353  0000                     
   354  0000                     
   355  0000                     
   356  0000                     
   357  0000                     
   358  0000                     
   359  0000                     
   360  0000                     
   361  0000                     
   362  0000                     
   363  0000                     
   364  0000                     
   365  0000                     
   366  0000                     
   367  0000                     
   368  0000                     
   369  0000                     
   370  0000                     
   371  0000                     
   372  0000                     
   373  0000                     
   374  0000                     
   375  0000                     
   376  0000                     
   377  0000                     
   378  0000                     
   379  0000                     
   380  0000                     
   381  0000                     
   382  0000                     
   383  0000                     
   384  0000                     
   385  0000                     
   386  0000                     
   387  0000                     
   388  0000                     
   389  0000                     
   390  0000                     
   391  0000                     
   392  0000                     
   393  0000                     
   394  0000                     
   395  0000                     
   396  0000                     
   397  0000                     
   398  0000                     
   399  0000                     
   400  0000                     
   401  0000                     
   402  0000                     
   403  0000                     
   404  0000                     
   405  0000                     
   406  0000                     
   407  0000                     
   408  0000                     
   409  0000                     
   410  0000                     
   411  0000                     
   412  0000                     
   413  0000                     
   414  0000                     
   415  0000                     
   416  0000                     
   417  0000                     
   418  0000                     
   419  0000                     
   420  0000                     
   421  0000                     
   422  0000                     
   423  0000                     
   424  0000                     
   425  0000                     
   426  0000                     
   427  0000                     
   428  0000                     
   429  0000                     
   430  0000                     
   431  0000                     
   432  0000                     
   433  0000                     
   434  0000                     
   435  0000                     
   436  0000                     
   437  0000                     
   438  0000                     
   439  0000                     
   440  0000                     
   441  0000                     
   442  0000                     
   443  0000                     
   444  0000                     
   445  0000                     
   446  0000                     
   447  0000                     
   448  0000                     
   449  0000                     
   450  0000                     
   451  0000                     
   452  0000                     
   453  0000                     
   454  0000                     
   455  0000                     
   456  0000                     
   457  0000                     
   458  0000                     
   459  0000                     
   460  0000                     
   461  0000                     
   462  0000                     
   463  0000                     
   464  0000                     
   465  0000                     
   466  0000                     
   467  0000                     
   468  0000                     
   469  0000                     
   470  0000                     
   471  0000                     
   472  0000                     
   473  0000                     
   474  0000                     
   475  0000                     
   476  0000                     
   477  0000                     
   478  0000                     
   479  0000                     
   480  0000                     
   481  0000                     
   482  0000                     
   483  0000                     
   484  0000                     
   485  0000                     
   486  0000                     
   487  0000                     
   488  0000                     
   489  0000                     
   490  0000                     
   491  0000                     
   492  0000                     
   493  0000                     
   494  0000                     
   495  0000                     
   496  0000                     
   497  0000                     
   498  0000                     
   499  0000                     
   500  0000                     
   501  0000                     
   502  0000                     
   503  0000                     
   504  0000                     
   505  0000                     
   506  0000                     
   507  0000                     
   508  0000                     
   509  0000                     
   510  0000                     
   511  0000                     
   512  0000                     
   513  0000                     
   514  0000                     
   515  0000                     
   516  0000                     
   517  0000                     
   518  0000                     
   519  0000                     
   520  0000                     
   521  0000                     
   522  0000                     
   523  0000                     
   524  0000                     
   525  0000                     
   526  0000                     
   527  0000                     
   528  0000                     
   529  0000                     
   530  0000                     
   531  0000                     
   532  0000                     
   533  0000                     
   534  0000                     
   535  0000                     
   536  0000                     
   537  0000                     
   538  0000                     
   539  0000                     
   540  0000                     
   541  0000                     
   542  0000                     
   543  0000                     
   544  0000                     
   545  0000                     
   546  0000                     
   547  0000                     
   548  0000                     
   549  0000                     
   550  0000                     
   551  0000                     
   552  0000                     
   553  0000                     
   554  0000                     
   555  0000                     
   556  0000                     
   557  0000                     
   558  0000                     
   559  0000                     
   560  0000                     
   561  0000                     
   562  0000                     
   563  0000                     
   564  0000                     
   565  0000                     
   566  0000                     
   567  0000                     
   568  0000                     
   569  0000                     
   570  0000                     
   571  0000                     
   572  0000                     
   573  0000                     
   574  0000                     
   575  0000                     
   576  0000                     
   577  0000                     
   578  0000                     
   579  0000                     
   580  0000                     
   581  0000                     
   582  0000                     
   583  0000                     
   584  0000                     
   585  0000                     
   586                           
   587                           	psect	temp
   588  0070                     btemp
   589  0070                     	ds	2


HI-TECH Software PICC Macro Assembler V8.05PL2
Symbol Table                                          Thu Oct 17 23:48:05 2019

      ?a_main 0020             l3 07E2             l5 07E4  
           pc 0002            l10 0018            l20 07BB  
          l13 002F            l24 079F            l17 07B9  
          l27 07A1            u14 07EC            u15 07EA  
          fsr 0004           _LED 0060        _Delay1 079A  
     _PIC_Int 0011  save_code_ptr 0011    save_btemp0 000D  
  save_btemp1 000F    save_btemp2 0011    save_btemp3 0011  
  save_btemp4 0011    save_btemp5 0011    save_btemp6 0011  
  save_btemp7 0011    save_btemp8 0011    save_btemp9 0011  
        _main 07CE          btemp 0070          start 005B  
      saved_w 0072      int_entry 0004         _Delay 07B4  
    saved_fsr 002D   save_btemp10 000F   save_btemp11 000F  
 save_btemp12 000F   save_btemp13 000F   save_btemp14 000F  
 saved_pclath 002E         pclath 000A   saved_status 002C  
       status 0003       int_func 0011     ?a_PIC_Int 0026  
     ?_Delay1 0028    int_restore 0056        ?_Delay 0022  
  used_btemp0 0001    used_btemp1 0001      ?a_Delay1 002A  
     ?a_Delay 0024  
