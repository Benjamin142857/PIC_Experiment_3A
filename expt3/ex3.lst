

HI-TECH Software PICC Macro Assembler V8.05PL2
Serial number: HCPIC-88888                            Sat Sep 28 15:56:33 2019

Licensed to: ONE TWO
     1                           	processor	16F877A
     2                           	opt	pw 79
     3                           	psect	__Z88888RS_,global,delta=1
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	const1,local,class=CONST,delta=2
     6                           	psect	text1,local,class=CODE,delta=2
     7                           	psect	intcode,global,class=CODE,delta=2
     8                           	psect	intsave_0,global,ovrld,class=COMBANK,spa
      +                          ce=1,delta=1
     9                           	psect	intret,global,class=CODE,delta=2
    10                           	psect	intentry,global,class=CODE,delta=2
    11                           	psect	intsave,global,class=BANK0,space=1,delta
      +                          =1
    12                           	psect	text2,local,class=CODE,delta=2
    13                           	psect	text3,local,class=CODE,delta=2
    14                           	psect	text4,local,class=CODE,delta=2
    15                           	psect	text5,local,class=CODE,delta=2
    16                           	psect	temp,global,ovrld,class=BANK0,space=1,de
      +                          lta=1
    17  0000                     
    18  0000                     
    19  0000                     
    20  0000                     
    21  0000                     
    22  0000                     
    23  0000                     
    24  0000                     
    25  0000                     
    26  0000                     
    27                           
    28                           	psect	__Z88888RS_
    29  0190                     
    30  0190                     
    31                           
    32                           	psect	const1
    33  0060  0782               	addwf	2
    34  0061                     _LED
    35  0061  343F               	retlw	63
    36  0062  3406               	retlw	6
    37  0063  345B               	retlw	91
    38  0064  344F               	retlw	79
    39  0065  3466               	retlw	102
    40  0066  346D               	retlw	109
    41  0067  3400               	retlw	0
    42  0068  3400               	retlw	0
    43  0069  3400               	retlw	0
    44  006A  3400               	retlw	0
    45                           
    46                           	psect	intcode
    47                           ;ex3.c: 39: void interrupt PIC_Int(void)
    48                           ;ex3.c: 40: {
    49  0011                     _PIC_Int
    50  0011                     int_func
    51                           ;	_i assigned to ?a_PIC_Int+0
    52  0000                     _PIC_Int$i	set	?a_PIC_Int
    53                           ;	_n assigned to ?a_PIC_Int+1
    54  0000                     _PIC_Int$n	set	?a_PIC_Int+1
    55                           ;ex3.c: 41: unsigned char i;
    56  0011  1C0B               	btfss	11,0
    57  0012  2833               	goto	l9
    58                           ;ex3.c: 44: {
    59  0013  1283               	bcf	3,5
    60  0014  1303               	bcf	3,6	;carry unused
    61  0015  1685               	bsf	5,5
    62                           ;ex3.c: 46: RA1=0;
    63  0016  1085               	bcf	5,1
    64                           ;ex3.c: 47: for(n=5;n>=0;n--)
    65  0017  3005               	movlw	5
    66  0018  00A6               	movwf	?a_PIC_Int+1
    67  0019  01A7               	clrf	?a_PIC_Int+2
    68  001A                     l10
    69                           ;ex3.c: 48: {
    70                           ;ex3.c: 49: shownumber(n);
    71  001A  0826               	movf	?a_PIC_Int+1,w
    72  001B  00A8               	movwf	?_shownumber
    73  001C  0827               	movf	?a_PIC_Int+2,w
    74  001D  00A9               	movwf	?_shownumber+1
    75  001E  120A  118A  278A   	fcall	_shownumber
    76                           ;ex3.c: 50: Delay1(300);
    77  0021  302C               	movlw	44
    78  0022  00A8               	movwf	?_Delay1
    79  0023  3001               	movlw	1
    80  0024  00A9               	movwf	?_Delay1+1
    81  0025  120A  118A  279E   	fcall	_Delay1
      +       120A  118A         
    82                           ;ex3.c: 51: }
    83  002A  08A6               	movf	?a_PIC_Int+1
    84  002B  1903               	btfsc	3,2
    85  002C  03A7               	decf	?a_PIC_Int+2
    86  002D  03A6               	decf	?a_PIC_Int+1
    87  002E  1FA7               	btfss	?a_PIC_Int+2,7
    88  002F  281A               	goto	l10
    89                           ;ex3.c: 52: RA1=1;
    90  0030  1485               	bsf	5,1
    91                           ;ex3.c: 53: RA5=0;
    92  0031  1285               	bcf	5,5
    93                           ;ex3.c: 54: RBIF=0;
    94  0032  100B               	bcf	11,0
    95  0033                     l9
    96                           ;ex3.c: 55: }
    97  0033  1C8B               	btfss	11,1
    98  0034  284D               	goto	l8
    99                           ;ex3.c: 57: {
   100  0035  1283               	bcf	3,5
   101  0036  1303               	bcf	3,6	;carry unused
   102  0037  1285               	bcf	5,5
   103                           ;ex3.c: 59: RA1=1;
   104  0038  1485               	bsf	5,1
   105                           ;ex3.c: 60: PORTD=0x00;
   106  0039  0188               	clrf	8	;volatile
   107                           ;ex3.c: 61: for(i=0; i<10; i++)
   108  003A  01A5               	clrf	?a_PIC_Int
   109  003B                     l14
   110                           ;ex3.c: 62: {
   111                           ;ex3.c: 63: PORTD=~PORTD;
   112  003B  0988               	comf	8	;volatile
   113                           ;ex3.c: 64: Delay1(300);
   114  003C  302C               	movlw	44
   115  003D  00A8               	movwf	?_Delay1
   116  003E  3001               	movlw	1
   117  003F  00A9               	movwf	?_Delay1+1
   118  0040  120A  118A  279E   	fcall	_Delay1
      +       120A  118A         
   119                           ;ex3.c: 65: }
   120  0045  0AA5               	incf	?a_PIC_Int
   121  0046  300A               	movlw	10
   122  0047  0225               	subwf	?a_PIC_Int,w
   123  0048  1C03               	btfss	3,0
   124  0049  283B               	goto	l14
   125                           ;ex3.c: 66: RA1=1;
   126  004A  1485               	bsf	5,1
   127                           ;ex3.c: 67: RA5=0;
   128  004B  1285               	bcf	5,5
   129                           ;ex3.c: 68: INTF=0;
   130  004C  108B               	bcf	11,1
   131                           ;ex3.c: 69: }
   132  004D                     l8
   133  004D  1303               	bcf	3,6	;carry unused
   134  004E  1283               	bcf	3,5
   135                           
   136                           	psect	intsave_0
   137  0072                     saved_w
   138  0072                     	ds	1
   139                           
   140                           	psect	intret
   141  0053  082D               	movf	saved_fsr,w
   142  0054  0084               	movwf	4	;restore FSR
   143  0055  082E               	movf	saved_pclath,w
   144  0056  008A               	movwf	10
   145  0057                     int_restore
   146  0057  082C               	movf	saved_status,w
   147  0058  0083               	movwf	3
   148  0059  0EF2               	swapf	saved_w
   149  005A  0E72               	swapf	saved_w,w
   150  005B  0009               	retfie
   151                           
   152                           	psect	intentry
   153  0004                     int_entry
   154  0004  00F2               	movwf	saved_w
   155  0005  0803               	movf	3,w
   156  0006  0183               	clrf	3
   157  0007  00AC               	movwf	saved_status
   158  0008  0804               	movf	4,w
   159  0009  00AD               	movwf	saved_fsr
   160  000A  080A               	movf	10,w
   161  000B  00AE               	movwf	saved_pclath
   162  000C  018A               	clrf	10
   163                           ;ex3.c: 71: void Delay (unsigned int delay)
   164                           ;ex3.c: 72: {
   165                           ;       param _delay assigned to ?_Delay+0
   166  0000                     _Delay$delay	set	?_Delay
   167                           
   168                           	psect	intsave
   169  002C                     saved_status
   170  002C                     	ds	1
   171  002D                     saved_fsr
   172  002D                     	ds	1
   173  002E                     saved_pclath
   174  002E                     	ds	1
   175                           
   176                           	psect	text2
   177  07B8                     _Delay
   178                           ;	_i assigned to ?a_Delay+0
   179  0000                     _Delay$i	set	?a_Delay
   180                           ;ex3.c: 73: unsigned int i;
   181  07B8  0183               	clrf	3	;select bank 0
   182  07B9  0822               	movf	?_Delay+1,w
   183  07BA  0421               	iorwf	?_Delay,w
   184  07BB  1903               	btfsc	3,2
   185  07BC  0008               	return
   186  07BD                     l18
   187                           ;ex3.c: 75: for (i=0; i<45; i++);
   188  07BD  01A3               	clrf	?a_Delay
   189  07BE  01A4               	clrf	?a_Delay+1
   190  07BF                     l21
   191  07BF  0AA3               	incf	?a_Delay
   192  07C0  1903               	btfsc	3,2
   193  07C1  0AA4               	incf	?a_Delay+1
   194  07C2  3000               	movlw	0
   195  07C3  0224               	subwf	?a_Delay+1,w
   196  07C4  302D               	movlw	45
   197  07C5  1903               	btfsc	3,2
   198  07C6  0223               	subwf	?a_Delay,w
   199  07C7  1C03               	btfss	3,0
   200  07C8  2FBF               	goto	l21
   201  07C9  08A1               	movf	?_Delay
   202  07CA  1903               	btfsc	3,2
   203  07CB  03A2               	decf	?_Delay+1
   204  07CC  03A1               	decf	?_Delay
   205  07CD  0822               	movf	?_Delay+1,w
   206  07CE  0421               	iorwf	?_Delay,w
   207  07CF  1903               	btfsc	3,2
   208  07D0  0008               	return
   209  07D1  2FBD               	goto	l18
   210  07D2                     _main
   211                           ;	_i assigned to ?a_main+0
   212  0000                     _main$i	set	?a_main
   213                           ;ex3.c: 18: ADCON1=(ADCON1&0xf0)|0x07;
   214  07D2  1683               	bsf	3,5
   215  07D3  1303               	bcf	3,6	;carry unused
   216  07D4  081F               	movf	31,w	;volatile
   217  07D5  39F0               	andlw	-16
   218  07D6  3807               	iorlw	7
   219  07D7  009F               	movwf	31	;volatile
   220                           ;ex3.c: 19: TRISB=0B00100001;
   221  07D8  3021               	movlw	33
   222  07D9  0086               	movwf	6	;volatile
   223                           ;ex3.c: 20: TRISD=0x00;
   224  07DA  0188               	clrf	8	;volatile
   225                           ;ex3.c: 21: PORTA=0x00;
   226  07DB  1283               	bcf	3,5
   227  07DC  0185               	clrf	5	;volatile
   228                           ;ex3.c: 22: TRISA=TRISA&(~(0x01<<1));
   229  07DD  1683               	bsf	3,5
   230  07DE  1085               	bcf	5,1	;volatile
   231                           ;ex3.c: 23: TRISA=TRISA&(~(0x01<<5));
   232  07DF  1285               	bcf	5,5	;volatile
   233                           ;ex3.c: 24: INTEDG=0;
   234  07E0  1301               	bcf	1,6
   235                           ;ex3.c: 25: RBIE=1;
   236  07E1  158B               	bsf	11,3
   237                           ;ex3.c: 26: INTE=1;
   238  07E2  160B               	bsf	11,4
   239                           ;ex3.c: 27: INTF=0;
   240  07E3  108B               	bcf	11,1
   241                           ;ex3.c: 28: GIE=1;
   242  07E4  178B               	bsf	11,7
   243                           ;ex3.c: 29: RA1=1;
   244  07E5  1283               	bcf	3,5
   245  07E6  1485               	bsf	5,1
   246  07E7                     l3
   247                           ;ex3.c: 30: while(1){
   248                           ;ex3.c: 31: unsigned char i=0;
   249  07E7  01A0               	clrf	?a_main
   250                           ;ex3.c: 32: for(i=0; i<8; i++)
   251  07E8  01A0               	clrf	?a_main
   252  07E9                     l5
   253                           ;ex3.c: 33: {
   254                           ;ex3.c: 34: PORTD=(0x01<<i);
   255  07E9  3001               	movlw	1
   256  07EA  00F0               	movwf	btemp
   257  07EB  0820               	movf	?a_main,w
   258  07EC  00F1               	movwf	btemp+1
   259  07ED  0AF1               	incf	btemp+1
   260  07EE  2FF1               	goto	u14
   261  07EF                     u15
   262  07EF  1003               	bcf	3,0
   263  07F0  0DF0               	rlf	btemp
   264  07F1                     u14
   265  07F1  0BF1               	decfsz	btemp+1
   266  07F2  2FEF               	goto	u15
   267  07F3  0870               	movf	btemp,w
   268  07F4  0088               	movwf	8	;volatile
   269                           ;ex3.c: 35: Delay(3000);
   270  07F5  30B8               	movlw	184
   271  07F6  00A1               	movwf	?_Delay
   272  07F7  300B               	movlw	11
   273  07F8  00A2               	movwf	?_Delay+1
   274  07F9  27B8               	fcall	_Delay
   275                           ;ex3.c: 36: }
   276  07FA  0AA0               	incf	?a_main
   277  07FB  3008               	movlw	8
   278  07FC  0220               	subwf	?a_main,w
   279  07FD  1803               	btfsc	3,0
   280  07FE  2FE7               	goto	l3
   281  07FF  2FE9               	goto	l5
   282                           
   283                           	psect	text3
   284  079E                     _Delay1
   285                           ;	_i assigned to ?a_Delay1+0
   286  0000                     _Delay1$i	set	?a_Delay1
   287                           ;ex3.c: 79: unsigned int i;
   288  079E  0183               	clrf	3	;select bank 0
   289  079F  0829               	movf	?_Delay1+1,w
   290  07A0  0428               	iorwf	?_Delay1,w
   291  07A1  1903               	btfsc	3,2
   292  07A2  0008               	return
   293  07A3                     l25
   294                           ;ex3.c: 81: for (i=0; i<45; i++);
   295  07A3  01AA               	clrf	?a_Delay1
   296  07A4  01AB               	clrf	?a_Delay1+1
   297  07A5                     l28
   298  07A5  0AAA               	incf	?a_Delay1
   299  07A6  1903               	btfsc	3,2
   300  07A7  0AAB               	incf	?a_Delay1+1
   301  07A8  3000               	movlw	0
   302  07A9  022B               	subwf	?a_Delay1+1,w
   303  07AA  302D               	movlw	45
   304  07AB  1903               	btfsc	3,2
   305  07AC  022A               	subwf	?a_Delay1,w
   306  07AD  1C03               	btfss	3,0
   307  07AE  2FA5               	goto	l28
   308  07AF  08A8               	movf	?_Delay1
   309  07B0  1903               	btfsc	3,2
   310  07B1  03A9               	decf	?_Delay1+1
   311  07B2  03A8               	decf	?_Delay1
   312  07B3  0829               	movf	?_Delay1+1,w
   313  07B4  0428               	iorwf	?_Delay1,w
   314  07B5  1903               	btfsc	3,2
   315  07B6  0008               	return
   316  07B7  2FA3               	goto	l25
   317                           
   318                           	psect	text4
   319  078A                     _shownumber
   320                           ;ex3.c: 85: if(n<6)
   321  078A  0183               	clrf	3	;select bank 0
   322  078B  0829               	movf	?_shownumber+1,w
   323  078C  3A80               	xorlw	128
   324  078D  00F0               	movwf	btemp
   325  078E  3080               	movlw	128
   326  078F  0270               	subwf	btemp,w
   327  0790  3006               	movlw	6
   328                           ;set	bank bits (((?_shownumber+0)))
   329  0791  1903               	btfsc	3,2
   330  0792  0228               	subwf	?_shownumber,w
   331  0793  1803               	btfsc	3,0
   332  0794  0008               	return
   333                           ;ex3.c: 86: {
   334  0795  1685               	bsf	5,5
   335                           ;ex3.c: 88: PORTD=LED[n];
   336  0796  3000               	movlw	_LED shr (0+8)
   337  0797  008A               	movwf	10
   338  0798  0828               	movf	?_shownumber,w
   339  0799  2060               	call	((_LED+-1)& (0+2047))| (($)& (0+-2048))
   340  079A  120A  118A         	pagesel	$
   341  079C  0088               	movwf	8	;volatile
   342                           ;ex3.c: 89: }
   343  079D  0008               	return
   344                           
   345                           	psect	text5
   346  0000                     
   347  0000                     
   348  0000                     
   349  0000                     
   350  0000                     
   351  0000                     
   352  0000                     
   353  0000                     
   354  0000                     
   355  0000                     
   356  0000                     
   357  0000                     
   358  0000                     
   359  0000                     
   360  0000                     
   361  0000                     
   362  0000                     
   363  0000                     
   364  0000                     
   365  0000                     
   366  0000                     
   367  0000                     
   368  0000                     
   369  0000                     
   370  0000                     
   371  0000                     
   372  0000                     
   373  0000                     
   374  0000                     
   375  0000                     
   376  0000                     
   377  0000                     
   378  0000                     
   379  0000                     
   380  0000                     
   381  0000                     
   382  0000                     
   383  0000                     
   384  0000                     
   385  0000                     
   386  0000                     
   387  0000                     
   388  0000                     
   389  0000                     
   390  0000                     
   391  0000                     
   392  0000                     
   393  0000                     
   394  0000                     
   395  0000                     
   396  0000                     
   397  0000                     
   398  0000                     
   399  0000                     
   400  0000                     
   401  0000                     
   402  0000                     
   403  0000                     
   404  0000                     
   405  0000                     
   406  0000                     
   407  0000                     
   408  0000                     
   409  0000                     
   410  0000                     
   411  0000                     
   412  0000                     
   413  0000                     
   414  0000                     
   415  0000                     
   416  0000                     
   417  0000                     
   418  0000                     
   419  0000                     
   420  0000                     
   421  0000                     
   422  0000                     
   423  0000                     
   424  0000                     
   425  0000                     
   426  0000                     
   427  0000                     
   428  0000                     
   429  0000                     
   430  0000                     
   431  0000                     
   432  0000                     
   433  0000                     
   434  0000                     
   435  0000                     
   436  0000                     
   437  0000                     
   438  0000                     
   439  0000                     
   440  0000                     
   441  0000                     
   442  0000                     
   443  0000                     
   444  0000                     
   445  0000                     
   446  0000                     
   447  0000                     
   448  0000                     
   449  0000                     
   450  0000                     
   451  0000                     
   452  0000                     
   453  0000                     
   454  0000                     
   455  0000                     
   456  0000                     
   457  0000                     
   458  0000                     
   459  0000                     
   460  0000                     
   461  0000                     
   462  0000                     
   463  0000                     
   464  0000                     
   465  0000                     
   466  0000                     
   467  0000                     
   468  0000                     
   469  0000                     
   470  0000                     
   471  0000                     
   472  0000                     
   473  0000                     
   474  0000                     
   475  0000                     
   476  0000                     
   477  0000                     
   478  0000                     
   479  0000                     
   480  0000                     
   481  0000                     
   482  0000                     
   483  0000                     
   484  0000                     
   485  0000                     
   486  0000                     
   487  0000                     
   488  0000                     
   489  0000                     
   490  0000                     
   491  0000                     
   492  0000                     
   493  0000                     
   494  0000                     
   495  0000                     
   496  0000                     
   497  0000                     
   498  0000                     
   499  0000                     
   500  0000                     
   501  0000                     
   502  0000                     
   503  0000                     
   504  0000                     
   505  0000                     
   506  0000                     
   507  0000                     
   508  0000                     
   509  0000                     
   510  0000                     
   511  0000                     
   512  0000                     
   513  0000                     
   514  0000                     
   515  0000                     
   516  0000                     
   517  0000                     
   518  0000                     
   519  0000                     
   520  0000                     
   521  0000                     
   522  0000                     
   523  0000                     
   524  0000                     
   525  0000                     
   526  0000                     
   527  0000                     
   528  0000                     
   529  0000                     
   530  0000                     
   531  0000                     
   532  0000                     
   533  0000                     
   534  0000                     
   535  0000                     
   536  0000                     
   537  0000                     
   538  0000                     
   539  0000                     
   540  0000                     
   541  0000                     
   542  0000                     
   543  0000                     
   544  0000                     
   545  0000                     
   546  0000                     
   547  0000                     
   548  0000                     
   549  0000                     
   550  0000                     
   551  0000                     
   552  0000                     
   553  0000                     
   554  0000                     
   555  0000                     
   556  0000                     
   557  0000                     
   558  0000                     
   559  0000                     
   560  0000                     
   561  0000                     
   562  0000                     
   563  0000                     
   564  0000                     
   565  0000                     
   566  0000                     
   567  0000                     
   568  0000                     
   569  0000                     
   570  0000                     
   571  0000                     
   572  0000                     
   573  0000                     
   574  0000                     
   575  0000                     
   576  0000                     
   577  0000                     
   578  0000                     
   579  0000                     
   580  0000                     
   581  0000                     
   582  0000                     
   583  0000                     
   584  0000                     
   585  0000                     
   586  0000                     
   587  0000                     
   588  0000                     
   589  0000                     
   590  0000                     
   591  0000                     
   592  0000                     
   593  0000                     
   594  0000                     
   595  0000                     
   596  0000                     
   597  0000                     
   598  0000                     
   599  0000                     
   600  0000                     
   601  0000                     
   602  0000                     
   603  0000                     
   604  0000                     
   605  0000                     
   606  0000                     
   607  0000                     
   608  0000                     
   609  0000                     
   610  0000                     
   611  0000                     
   612  0000                     
   613  0000                     
   614  0000                     
   615  0000                     
   616  0000                     
   617  0000                     
   618  0000                     
   619  0000                     
   620  0000                     
   621  0000                     
   622                           
   623                           	psect	temp
   624  0070                     btemp
   625  0070                     	ds	2


HI-TECH Software PICC Macro Assembler V8.05PL2
Symbol Table                                          Sat Sep 28 15:56:33 2019

      ?a_main 0020             l3 07E7             l5 07E9  
           l8 004D             l9 0033             pc 0002  
 ?_shownumber 0028            l10 001A            l21 07BF  
          l14 003B            l25 07A3            l18 07BD  
          l28 07A5            u14 07F1            u15 07EF  
          fsr 0004           _LED 0061        _Delay1 079E  
  _shownumber 078A       _PIC_Int 0011  save_code_ptr 0011  
  save_btemp0 000D    save_btemp1 000F    save_btemp2 0011  
  save_btemp3 0011    save_btemp4 0011    save_btemp5 0011  
  save_btemp6 0011    save_btemp7 0011    save_btemp8 0011  
  save_btemp9 0011          _main 07D2          btemp 0070  
        start 005C        saved_w 0072      int_entry 0004  
       _Delay 07B8      saved_fsr 002D   save_btemp10 000F  
 save_btemp11 000F   save_btemp12 000F   save_btemp13 000F  
 save_btemp14 000F   saved_pclath 002E         pclath 000A  
 saved_status 002C         status 0003       int_func 0011  
   ?a_PIC_Int 0025       ?_Delay1 0028    int_restore 0057  
      ?_Delay 0021    used_btemp0 0001    used_btemp1 0001  
    ?a_Delay1 002A       ?a_Delay 0023  
